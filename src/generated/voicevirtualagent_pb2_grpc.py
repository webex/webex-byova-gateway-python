# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

import byova_common_pb2 as byova__common__pb2
import voicevirtualagent_pb2 as voicevirtualagent__pb2

GRPC_GENERATED_VERSION = '1.74.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in voicevirtualagent_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class VoiceVirtualAgentStub(object):
    """Service definition for the Voice Virtual Agent gRPC API.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ProcessCallerInput = channel.stream_stream(
                '/com.cisco.wcc.ccai.media.v1.VoiceVirtualAgent/ProcessCallerInput',
                request_serializer=voicevirtualagent__pb2.VoiceVARequest.SerializeToString,
                response_deserializer=voicevirtualagent__pb2.VoiceVAResponse.FromString,
                _registered_method=True)
        self.ListVirtualAgents = channel.unary_unary(
                '/com.cisco.wcc.ccai.media.v1.VoiceVirtualAgent/ListVirtualAgents',
                request_serializer=byova__common__pb2.ListVARequest.SerializeToString,
                response_deserializer=byova__common__pb2.ListVAResponse.FromString,
                _registered_method=True)


class VoiceVirtualAgentServicer(object):
    """Service definition for the Voice Virtual Agent gRPC API.
    """

    def ProcessCallerInput(self, request_iterator, context):
        """Bidirectional streaming RPC to send and receive caller audio, DTMF,
        or input events.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListVirtualAgents(self, request, context):
        """
        The Service that takes virtual agent list request and org id and returns a list of bots.
        Returned list is shown on flow(virtual agent v2 activity) to select specific VA/Bot
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_VoiceVirtualAgentServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ProcessCallerInput': grpc.stream_stream_rpc_method_handler(
                    servicer.ProcessCallerInput,
                    request_deserializer=voicevirtualagent__pb2.VoiceVARequest.FromString,
                    response_serializer=voicevirtualagent__pb2.VoiceVAResponse.SerializeToString,
            ),
            'ListVirtualAgents': grpc.unary_unary_rpc_method_handler(
                    servicer.ListVirtualAgents,
                    request_deserializer=byova__common__pb2.ListVARequest.FromString,
                    response_serializer=byova__common__pb2.ListVAResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'com.cisco.wcc.ccai.media.v1.VoiceVirtualAgent', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('com.cisco.wcc.ccai.media.v1.VoiceVirtualAgent', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class VoiceVirtualAgent(object):
    """Service definition for the Voice Virtual Agent gRPC API.
    """

    @staticmethod
    def ProcessCallerInput(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(
            request_iterator,
            target,
            '/com.cisco.wcc.ccai.media.v1.VoiceVirtualAgent/ProcessCallerInput',
            voicevirtualagent__pb2.VoiceVARequest.SerializeToString,
            voicevirtualagent__pb2.VoiceVAResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListVirtualAgents(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/com.cisco.wcc.ccai.media.v1.VoiceVirtualAgent/ListVirtualAgents',
            byova__common__pb2.ListVARequest.SerializeToString,
            byova__common__pb2.ListVAResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
